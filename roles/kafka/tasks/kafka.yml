---
# netstat -ant | grep :2181
- name: install zookeeperd
  apt:
    name: zookeeperd
  
- name: download Kafka
  get_url:
    url: "http://ftp.halifax.rwth-aachen.de/apache/kafka/2.0.1/{{ kafka_file }}.tgz"
    dest: /var/tmp

- name: create install directory opt/kafka
  file:
    path: /opt/kafka
    state: directory

- name: create log directory
  file:
    path: /var/log/kafka
    state: directory

- name: extract kafka.tgz into /opt/kafka
  unarchive:
    src: "/var/tmp/{{ kafka_file }}.tgz"
    dest: /opt/kafka
    remote_src: yes

- name: copy default kafka config 
  copy:
    src: "roles/kafka/files/kafka"
    dest: "/etc/default/kafka"

- name: create kafka config 
  template: dest=/etc/init/kafka.conf src=kafka.conf.j2 mode=0644 owner=root group=root

- name: create kafka service file 
  template: dest=/lib/systemd/system/kafka.service src=kafka.service.j2 mode=0644 owner=root group=root

- name: create symbolic link to kafka service
  file:
    src: "/lib/systemd/system/kafka.service"
    dest: "/etc/systemd/system/multi-user.target.wants/kafka.service"
    state: link

- name: reload systemctl daemon
  command: systemctl daemon-reload
  notify:
    - restart kafka

- name: "create topic: test"
  command: "/opt/kafka/{{ kafka_file }}/bin/kafka-topics.sh --create --zookeeper localhost:2181 --if-not-exists --replication-factor 1 --partitions 1 --topic test"

- name: "test topic: test"
  command: "/opt/kafka/{{ kafka_file }}/bin/kafka-topics.sh --list --zookeeper localhost:2181"
  register: result

- debug: 
    msg:
      - "Topic-Test-Result: {{ result.stdout }}"
